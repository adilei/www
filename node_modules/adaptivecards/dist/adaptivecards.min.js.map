{"version":3,"sources":["webpack://AdaptiveCards/webpack/universalModuleDefinition","webpack://AdaptiveCards/webpack/bootstrap","webpack://AdaptiveCards/./src/enums.ts","webpack://AdaptiveCards/./src/shared.ts","webpack://AdaptiveCards/./src/utils.ts","webpack://AdaptiveCards/./src/host-config.ts","webpack://AdaptiveCards/./src/adaptivecards.ts","webpack://AdaptiveCards/./src/card-elements.ts","webpack://AdaptiveCards/./src/text-formatters.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ActionStyle","Default","Positive","Destructive","Size","SizeUnit","TextSize","TextWeight","FontType","Spacing","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","FillMode","ActionIconPlacement","InputTextStyle","InputValidationNecessity","ContainerStyle","Emphasis","Accent","Good","Attention","Warning","ValidationError","ContainerFitStatus","Enums","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","getReferencedInputs","inputs","referencedInputs","Error","_i","inputs_1","length","input","RegExp","id","exec","substituteInputValues","contentType","matches","regEx","matchedInput","_a","keys","toLowerCase","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","SizeAndUnit","physicalSize","unit","parse","requireUnitSpecifier","result","Weight","expectedMatchCount","parseInt","Pixel","UUID","generate","d0","Math","random","d1","d2","d3","lut","initialize","toString","Shared","getValueOrDefault","obj","defaultValue","isNullOrEmpty","setProperty","target","propertyName","propertyValue","undefined","getEnumValue","targetEnum","stringToCssColor","color","a","findNextCharacter","html","currIdx","generateUniqueId","getStringValue","appendChild","node","child","setEnumProperty","enumType","targetValue","canDeleteTarget","setArrayProperty","items","propertyValue_1","item","push","toJSON","Array","isArray","getBoolValue","parseHostConfigEnum","renderSeparation","hostConfig","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","className","makeCssClassName","Horizontal","style","paddingTop","marginBottom","borderBottom","lineColor","height","paddingLeft","marginRight","borderRight","width","overflow","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","results","findBreakableIndices","lo","hi","bestBreakIdx","mid","floor","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","Utils","ColorDefinition","defaultColor","subtleColor","default","subtle","TextColorDefinition","_super","_this","apply","arguments","highlightColors","__extends","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","MediaConfig","allowInlinePlayback","defaultPoster","FactTextDefinition","size","isSubtle","weight","wrap","getDefaultWeight","FactTitleDefinition","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","sizeAndUnit","e","ColorSetDefinition","dark","light","accent","good","warning","attention","parseSingleColor","ContainerStyleDefinition","foregroundColors","backgroundColor","highlightBackgroundColor","highlightForegroundColor","BuiltInContainerStyleDefinition","ContainerStyleSet","_allStyles","customStyleArray","customStyleArray_1","customStyle","styleName","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","Version","major","minor","label","_isValid","_major","_minor","_label","versionString","errors","_versionString","error","InvalidPropertyValue","message","compareTo","otherVersion","isValid","HostCapabilities","capabilities","setCapability","version","json","name_1","jsonVersion","hasCapability","areAllMet","hostCapabilities","capabilityName","FontTypeDefinition","fontFamily","fontSizes","small","medium","large","extraLarge","fontWeights","lighter","bolder","monospace","FontTypeSet","getStyleDefinition","Monospace","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontTypes","padding","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","alwaysAllowBleed","String","_legacyFontType","lineHeights","getFontTypeDefinition","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","paddingDefinitionToSpacingDefinition","paddingDefinition","makeCssClassNames","classNames","classNames_1","join","__export","InstanceCreationErrorType","TextFormatters","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","createCardObjectInstance","parent","forbiddenTypeNames","allowFallback","createInstanceCallback","createValidationErrorCallback","tryToFallback","typeName","indexOf","raiseParseError","ForbiddenType","setParent","shouldFallback","UnknownType","fallback","setShouldFallback","createActionInstance","AdaptiveCard","actionTypeRegistry","createInstance","errorType","UnknownActionType","ActionTypeNotAllowed","createElementInstance","elementTypeRegistry","UnknownElementType","ElementTypeNotAllowed","SerializableObject","_rawProperties","enableFullJsonRoundTrip","setCustomProperty","getCustomProperty","ValidationFailure","cardObject","ValidationResults","allIds","failures","getFailureIndex","addFailure","failure","index","CardObject","internalValidateProperties","context","DuplicateId","validateProperties","CardElement","_shouldFallback","_lang","_hostConfig","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","requires","horizontalAlignment","customCssSelector","minPixelHeight","internalRenderSeparator","renderedSeparator","separatorOrientation","alwaysBleedSeparators","parentContainer","getParentContainer","getEffectivePadding","parentPhysicalPadding","marginLeft","updateRenderedElementVisibility","displayMode","isDesignMode","isVisible","display","isFirstElement","hideElementDueToOverflow","visibility","raiseElementVisibilityChangedEvent","showElementHiddenDueToOverflow","handleOverflow","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","adjustRenderedElementSize","renderedElement","flex","overrideInternalRender","internalRender","applyPadding","separatorElement","isBleeding","getImmediateSurroundingPadding","physicalPadding","getDefaultPadding","getHasBackground","getPadding","setPadding","asString","supportsMinHeight","isNaN","getEffectiveStyle","defaultStyle","getForbiddenElementTypes","getForbiddenActionTypes","processTop","processRight","processBottom","processLeft","doProcessTop","isTopElement","doProcessRight","isRightMostElement","doProcessBottom","isBottomElement","doProcessLeft","isLeftMostElement","effectivePadding","card","getRootElement","onParseElementHandler","onParseElement","raiseParseElementEvent","jsonSeparation","Deprecated","jsonHeight","jsonMinHeight","getActionCount","getActionAt","remove","CardElementContainer","removeItem","render","classList","add","boxSizing","updateLayout","processChildren","cardElement","rootElement","designMode","isRendered","offsetHeight","isLastElement","isAtTheVeryLeft","isAtTheVeryRight","isAtTheVeryTop","isAtTheVeryBottom","isBleedingAtTop","isBleedingAtBottom","currentElement","Container","getAllInputs","getResourceInformation","getElementById","getActionById","allowCustomPadding","lang","defaultHostConfig","useAdvancedCardBottomTruncation","BaseTextBlock","_selectAction","fontType","getEffectiveStyleDefinition","getFontSize","getColorDefinition","colorSet","Dark","Light","setText","_text","text","applyStylesTo","targetElement","fontWeight","colorDefinition","effectiveColor","Lighter","sizeString","weightString","TextBlock","_processedText","_treatAsPlainText","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","getRenderedDomElementType","selectAction","onclick","preventDefault","cancelBubble","execute","tabIndex","setAttribute","formattedText","formatText","allowMarkForTextHighlighting","markdownProcessingResult","applyMarkdown","didProcess","outputHtml","markStyle","effectiveStyle","firstElementChild","HTMLElement","marginTop","textOverflow","lastElementChild","anchors","getElementsByTagName","anchor","onAnchorClickedHandler","onAnchorClicked","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","isRtl","Center","textAlign","Right","Label","forElementId","htmlFor","TextRun","italic","strikethrough","highlight","href","getHref","fontStyle","textDecoration","ShowCardAction","JsonTypeName","RichTextBlock","_inlines","internalAddInline","inline","forceAdd","isInline","jsonInline","textRun","jsonInlines","getInlineCount","getInlineAt","addInline","removeInline","splice","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","jsonFacts","jsonFacts_1","jsonFact","fact","Image","Auto","pixelWidth","pixelHeight","altText","parseDimension","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","raiseImageLoadedEvent","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","mimeType","allowVerticalOverflow","isElementAllowed","forbiddenElementTypes","isInteractive","forbiddenElementTypes_1","forbiddenElementType","paddingRight","paddingBottom","getSelectAction","setSelectAction","isSelectable","getItemCount","getItemAt","InteractivityNotAllowed","overflowX","overflowY","concat","ImageSet","_images","flexWrap","renderedImage","margin","getFirstVisibleRenderedItem","getLastVisibleRenderedItem","itemIndex","images","image","jsonImages","addImage","MediaSource","Media","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","supportedMediaTypes","renderPoster","posterRootElement","position","posterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSource","mediaSource","InputValidationOptions","necessity","Optional","errorMessage","Input","validation","_renderedInputControlElement","_inputControlContainerElement","_outerContainerElement","flexDirection","useBuiltInInputValidation","isNullable","RequiredWithVisualCue","valueChanged","onInputValueChangedHandler","resetValidationFailureCue","onValueChanged","onInputValueChanged","_errorMessageElement","showValidationErrorMessage","displayInputValidationErrors","textContent","parseInputValue","PropertyCantBeNull","validateValue","jsonValidation","_defaultValue","TextInput","isMultiline","Text","textareaElement","placeholder","maxLength","oninput","inlineAction","inputElement","renderedInputControl","button_1","iconUrl","icon_1","removeProperty","inputControlContainerElement","_inlineAction","renderedInputControlElement","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","onchange","useMarkdownInRadioButtonAndCheckbox","labelElement","spacerElement","Choice","ChoiceSetInput","choices","isCompact","isMultiSelect","getUniqueCategoryName","uniqueCwtegoryName","uniqueCategoryCounter","defaultValues","_toggleInputs","i_2","checkboxInput","compoundInput","_selectElement","option","selected","disabled","hidden","option_1","uniqueCategoryName","i_1","radioInput","CollectionCantBeEmpty","choice","jsonChoice","selectedIndex","NumberInput","_numberInputElement","min","max","_min","_max","DateInput","_dateInputElement","ActionButtonState","TimeInput","_timeInputElement","test","ActionButton","parentContainerStyle","_state","Normal","onClick","_parentContainerStyle","updateCssStyle","Expanded","Subdued","_b","alignment","click","Action","_actionCollection","setCollection","actionCollection","addCssClasses","internalGetReferencedInputs","allInputs","internalPrepareForExecution","internalValidateInputs","ignoreInputValidation","baseCssClass","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","onExecuteActionHandler","onExecute","onExecuteAction","prepareForExecution","onParseActionHandler","onParseAction","raiseParseActionEvent","removeAction","validateInputs","SubmitAction","_isPrepared","_ignoreInputValidation","allInputs_1","_originalData","_processedData","data","OpenUrlAction","ToggleVisibilityAction","targetElements","elementId","jsonTargetElements","jsonTargetElements_1","jsonElementId","addTargetElement","removeTargetElement","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","header","method","headers","body","jsonHeader","httpHeader","InlineAdaptiveCard","jsonCard","ActionCollection","owner","_expandedAction","_renderedActionCount","_actionCard","buttons","_owner","refreshContainer","_actionCardContainer","layoutChanged","hideActionCard","previouslyExpandedAction","raiseInlineCardExpandedEvent","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","clear","json_1","jsonAction","addAction","TooManyActions","buttonStrip","ab","spacer","buttonStripContainer","expandedAction","actionIndex","ActionSet","renderedActionCount","jsonOrientation","StylableCardElementContainer","_style","_bleed","applyBackground","styleDefinition","surroundingPadding","currentElementHasBackgroundImage","backgroundImage","hasExplicitStyle","getHasExpandedAction","getBleed","setBleed","BackgroundImage","fillMode","defaultFillMode","defaultHorizontalAlignment","verticalAlignment","defaultVerticalAlignment","reset","Repeat","RepeatHorizontally","RepeatVertically","Cover","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","Top","_items","_renderedItems","verticalContentAlignment","rtl","insertItemAt","forceInsert","isStandalone","supportsExcplitiHeight","getItemsCollectionPropertyName","dir","placeholderElement","boundary","handleElement","elt","maxHeight_1","elements","bleed","firstRenderedItem","lastRenderedItem","jsonBackgroundImage","addItem","insertItemBefore","insertBefore","insertItemAfter","insertAfter","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","_columns","createColumnInstance","_renderedColumns","totalWeight","column","_c","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","weightedColumns","stretchedColumns","Hint","addColumn","onImageLoadedHandler","onImageLoaded","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","shouldUpdateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","onParseError","ContainerWithActions","renderedActions","renderIfEmpty","TypeRegistry","findTypeRegistration","registerType","registrationInfo","unregisterType","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","_fallbackCard","onProcessMarkdown","console","warn","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","speak","MissingCardType","UnsupportedCardVersion","langId","fallbackElement","removeAttribute","AbstractTextFormatter","regularExpression","_regularExpression","format","internalFormat","DateFormatter","date","Date","toLocaleDateString","day","weekday","month","year","TimeFormatter","toLocaleTimeString","hour","minute","formatters"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AdaptiveCards\"] = factory();\n\telse\n\t\troot[\"AdaptiveCards\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport class ActionStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Positive = \"positive\";\r\n    static readonly Destructive = \"destructive\";\r\n}\r\n\r\nexport enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum FontType {\r\n    Default,\r\n    Monospace\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum FillMode {\r\n    Cover,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\nexport enum InputValidationNecessity {\r\n    Optional,\r\n    Required,\r\n    RequiredWithVisualCue\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Emphasis = \"emphasis\";\r\n    static readonly Accent = \"accent\";\r\n    static readonly Good = \"good\";\r\n    static readonly Attention = \"attention\";\r\n    static readonly Warning = \"warning\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion,\r\n    DuplicateId\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\n\r\nexport const ContentTypes = {\r\n\tapplicationJson: \"application/json\",\r\n\tapplicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n\tspacing: number,\r\n\tlineThickness?: number,\r\n\tlineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n\tid: string;\r\n    value: string;\r\n    validateValue(): boolean;\r\n}\r\n\r\nexport type Dictionary<T> = { [key: string]: T };\r\n\r\nexport class StringWithSubstitutions {\r\n\tprivate _isProcessed: boolean = false;\r\n\tprivate _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\r\n        if (!referencedInputs) {\r\n            throw new Error(\"The referencedInputs parameter cannot be null.\")\r\n        }\r\n\r\n        for (let input of inputs) {\r\n            let matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\r\n\r\n            if (matches != null) {\r\n                referencedInputs[input.id] = input;\r\n            }\r\n        }\r\n    }\r\n\r\n\tsubstituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\r\n\t\tthis._processed = this._original;\r\n\r\n\t\tlet regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n\t\tlet matches;\r\n\r\n\t\twhile ((matches = regEx.exec(this._original)) != null) {\r\n\t\t\tlet matchedInput: IInput = null;\r\n\r\n\t\t\tfor (let key of Object.keys(inputs)) {\r\n\t\t\t\tif (key.toLowerCase() == matches[1].toLowerCase()) {\r\n\t\t\t\t\tmatchedInput = inputs[key];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n            }\r\n\r\n            if (matchedInput) {\r\n\t\t\t\tvar valueForReplace = \"\";\r\n\r\n\t\t\t\tif (matchedInput.value) {\r\n\t\t\t\t\tvalueForReplace = matchedInput.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (contentType === ContentTypes.applicationJson) {\r\n\t\t\t\t\tvalueForReplace = JSON.stringify(valueForReplace);\r\n\t\t\t\t\tvalueForReplace = valueForReplace.slice(1, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n\t\t\t\t\tvalueForReplace = encodeURIComponent(valueForReplace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._processed = this._processed.replace(matches[0], valueForReplace);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._isProcessed = true;\r\n\t}\r\n\r\n\tgetOriginal(): string {\r\n\t\treturn this._original;\r\n\t}\r\n\r\n\tget(): string {\r\n\t\tif (!this._isProcessed) {\r\n\t\t\treturn this._original;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._processed;\r\n\t\t}\r\n\t}\r\n\r\n\tset(value: string) {\r\n\t\tthis._original = value;\r\n\t\tthis._isProcessed = false;\r\n\t}\r\n}\r\n\r\nexport class SpacingDefinition {\r\n\tleft: number = 0;\r\n\ttop: number = 0;\r\n\tright: number = 0;\r\n\tbottom: number = 0;\r\n\r\n\tconstructor(top: number = 0,\r\n\t\tright: number = 0,\r\n\t\tbottom: number = 0,\r\n\t\tleft: number = 0) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class PaddingDefinition {\r\n\ttop: Enums.Spacing = Enums.Spacing.None;\r\n\tright: Enums.Spacing = Enums.Spacing.None;\r\n\tbottom: Enums.Spacing = Enums.Spacing.None;\r\n\tleft: Enums.Spacing = Enums.Spacing.None;\r\n\r\n\tconstructor(top: Enums.Spacing = Enums.Spacing.None,\r\n\t\tright: Enums.Spacing = Enums.Spacing.None,\r\n\t\tbottom: Enums.Spacing = Enums.Spacing.None,\r\n\t\tleft: Enums.Spacing = Enums.Spacing.None) {\r\n\t\tthis.top = top;\r\n\t\tthis.right = right;\r\n\t\tthis.bottom = bottom;\r\n\t\tthis.left = left;\r\n\t}\r\n}\r\n\r\nexport class SizeAndUnit {\r\n\tphysicalSize: number;\r\n\tunit: Enums.SizeUnit;\r\n\r\n\tstatic parse(input: any, requireUnitSpecifier: boolean = false): SizeAndUnit {\r\n\t\tlet result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n\t\tlet regExp = /^([0-9]+)(px|\\*)?$/g;\r\n\t\tlet matches = regExp.exec(input);\r\n\t\tlet expectedMatchCount = requireUnitSpecifier ? 3 : 2;\r\n\r\n\t\tif (matches && matches.length >= expectedMatchCount) {\r\n\t\t\tresult.physicalSize = parseInt(matches[1]);\r\n\r\n\t\t\tif (matches.length == 3) {\r\n\t\t\t\tif (matches[2] == \"px\") {\r\n\t\t\t\t\tresult.unit = Enums.SizeUnit.Pixel;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tthrow new Error(\"Invalid size: \" + input);\r\n\t}\r\n\r\n\tconstructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n\t\tthis.physicalSize = physicalSize;\r\n\t\tthis.unit = unit;\r\n\t}\r\n}\r\n\r\nexport interface IResourceInformation {\r\n\turl: string;\r\n\tmimeType: string;\r\n}\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n\tprivate static lut = [];\r\n\r\n\tstatic generate(): string {\r\n\t\tlet d0 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d1 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d2 = Math.random() * 0xffffffff | 0;\r\n\t\tlet d3 = Math.random() * 0xffffffff | 0;\r\n\r\n\t\treturn UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n\t\t\tUUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n\t\t\tUUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n\t}\r\n\r\n\tstatic initialize() {\r\n\t\tfor (let i = 0; i < 256; i++) {\r\n\t\t\tUUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nUUID.initialize();\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport { HostConfig } from \"./host-config\";\r\n\r\nexport function generateUniqueId(): string {\r\n    return \"__ac-\" + Shared.UUID.generate();\r\n}\r\n\r\nexport function getStringValue(obj: any, defaultValue: string = undefined): string {\r\n    return obj ? obj.toString() : defaultValue;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function setProperty(target: object, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue === null || propertyValue === undefined || propertyValue === defaultValue) {\r\n        delete target[propertyName];\r\n    }\r\n    else {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: object, propertyName: string, propertyValue: number, defaultValue: number = undefined) {\r\n    let targetValue = target[propertyName];\r\n\r\n    let canDeleteTarget = targetValue == undefined ? true : enumType[targetValue] !== undefined;\r\n\r\n    if (propertyValue == defaultValue) {\r\n        if (canDeleteTarget) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        if (propertyValue == undefined) {\r\n            if (canDeleteTarget) {\r\n                delete target[propertyName];\r\n            }\r\n        }\r\n        else {\r\n            target[propertyName] = enumType[propertyValue];\r\n        }\r\n    }\r\n}\r\n\r\nexport function setArrayProperty(target: object, propertyName: string, propertyValue: any[]) {\r\n    let items = [];\r\n\r\n    if (propertyValue) {\r\n        for (let item of propertyValue) {\r\n            items.push(item.toJSON());\r\n        }\r\n    }\r\n\r\n    if (items.length == 0) {\r\n        if (target.hasOwnProperty(propertyName) && Array.isArray(target[propertyName])) {\r\n            delete target[propertyName];\r\n        }\r\n    }\r\n    else {\r\n        setProperty(target, propertyName, items);\r\n    }\r\n}\r\n\r\nexport function getBoolValue(value: any, defaultValue: boolean): boolean {\r\n    if (typeof value === \"boolean\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        switch (value.toLowerCase()) {\r\n            case \"true\":\r\n                return true;\r\n            case \"false\":\r\n                return false;\r\n            default:\r\n                return defaultValue;\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function getEnumValue(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValue(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(hostConfig: HostConfig, separationDefinition: Shared.ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        let separator = document.createElement(\"div\");\r\n        separator.className = hostConfig.makeCssClassName(\"ac-\" + (orientation == Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") + \"-separator\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginBottom = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderBottom = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.marginRight = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderRight = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n    maxHeight: number,\r\n    lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as Shared from \"./shared\";\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class ColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(defaultColor?: string, subtleColor?: string) {\r\n        if (defaultColor) {\r\n            this.default = defaultColor;\r\n        }\r\n\r\n        if (subtleColor) {\r\n            this.subtle = subtleColor;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextColorDefinition extends ColorDefinition {\r\n    readonly highlightColors = new ColorDefinition(\"#22000000\", \"#11000000\");\r\n\r\n    parse(obj?: any) {\r\n        super.parse(obj);\r\n\r\n        if (obj) {\r\n            this.highlightColors.parse(obj[\"highlightColors\"]);\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Shared.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ColorSetDefinition {\r\n    private parseSingleColor(obj: any, propertyName: string) {\r\n        if (obj) {\r\n            (this[propertyName] as TextColorDefinition).parse(obj[propertyName]);\r\n        }\r\n    }\r\n\r\n    default: TextColorDefinition = new TextColorDefinition();\r\n    dark: TextColorDefinition = new TextColorDefinition();\r\n    light: TextColorDefinition = new TextColorDefinition();\r\n    accent: TextColorDefinition = new TextColorDefinition();\r\n    good: TextColorDefinition = new TextColorDefinition();\r\n    warning: TextColorDefinition = new TextColorDefinition();\r\n    attention: TextColorDefinition = new TextColorDefinition();\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.parseSingleColor(obj, \"default\");\r\n            this.parseSingleColor(obj, \"dark\");\r\n            this.parseSingleColor(obj, \"light\");\r\n            this.parseSingleColor(obj, \"accent\");\r\n            this.parseSingleColor(obj, \"good\");\r\n            this.parseSingleColor(obj, \"warning\");\r\n            this.parseSingleColor(obj, \"attention\");\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors: ColorSetDefinition = new ColorSetDefinition(\r\n        {\r\n            \"default\": { default: \"#333333\", subtle: \"#EE333333\" },\r\n            \"dark\": { default: \"#000000\", subtle: \"#66000000\" },\r\n            \"light\": { default: \"#FFFFFF\", subtle: \"#33000000\" },\r\n            \"accent\": { default: \"#2E89FC\", subtle: \"#882E89FC\" },\r\n            \"good\": { default: \"#54A254\", subtle: \"#DD54A254\" },\r\n            \"warning\": { default: \"#E69500\", subtle: \"#DDE69500\" },\r\n            \"attention\": { default: \"#CC3300\", subtle: \"#DDCC3300\" }\r\n        }\r\n    );\r\n\r\n    highlightBackgroundColor?: string;\r\n    highlightForegroundColor?: string;\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            this.foregroundColors.parse(obj[\"foregroundColors\"]);\r\n\r\n            this.highlightBackgroundColor = obj[\"highlightBackgroundColor\"];\r\n            this.highlightForegroundColor = obj[\"highlightForegroundColor\"];\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Accent] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Good] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Attention] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Warning] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            this._allStyles[Enums.ContainerStyle.Accent].parse(obj[Enums.ContainerStyle.Accent]);\r\n            this._allStyles[Enums.ContainerStyle.Good].parse(obj[Enums.ContainerStyle.Good]);\r\n            this._allStyles[Enums.ContainerStyle.Attention].parse(obj[Enums.ContainerStyle.Attention]);\r\n            this._allStyles[Enums.ContainerStyle.Warning].parse(obj[Enums.ContainerStyle.Warning]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n    private _label: string;\r\n\r\n    constructor(major: number = 1, minor: number = 1, label?: string) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n        this._label = label;\r\n    }\r\n\r\n    static parse(versionString: string, errors?: Array<IValidationError>): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        if (!result._isValid && errors) {\r\n            errors.push(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid version string: \" + result._versionString\r\n                }\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    compareTo(otherVersion: Version): number {\r\n        if (!this.isValid || !otherVersion.isValid) {\r\n            throw new Error(\"Cannot compare invalid version.\");\r\n        }\r\n\r\n        if (this.major > otherVersion.major) {\r\n            return 1;\r\n        }\r\n        else if (this.major < otherVersion.major) {\r\n            return -1;\r\n        }\r\n        else if (this.minor > otherVersion.minor) {\r\n            return 1;\r\n        }\r\n        else if (this.minor < otherVersion.minor) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    get label(): string {\r\n        return this._label ? this._label : this.toString();\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nexport type HostCapabilityVersion = Version | \"*\";\r\nexport type HostCapabilityMap = { [key: string]: HostCapabilityVersion };\r\n\r\nexport class HostCapabilities {\r\n    private setCapability(name: string, version: HostCapabilityVersion) {\r\n        if (!this.capabilities) {\r\n            this.capabilities = { };\r\n        }\r\n\r\n        this.capabilities[name] = version;\r\n    }\r\n\r\n    capabilities: HostCapabilityMap = null;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        if (json) {\r\n            for (let name in json) {\r\n                let jsonVersion = json[name];\r\n\r\n                if (typeof jsonVersion === \"string\") {\r\n                    if (jsonVersion == \"*\") {\r\n                        this.setCapability(name, \"*\");\r\n                    }\r\n                    else {\r\n                        let version = Version.parse(jsonVersion, errors);\r\n\r\n                        if (version.isValid) {\r\n                            this.setCapability(name, version);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    hasCapability(name: string, version: HostCapabilityVersion): boolean {\r\n        if (this.capabilities && this.capabilities.hasOwnProperty(name)) {\r\n            if (version == \"*\" || this.capabilities[name] == \"*\") {\r\n                return true;\r\n            }\r\n\r\n            return version.compareTo(<Version>this.capabilities[name]) <= 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    areAllMet(hostCapabilities: HostCapabilities): boolean {\r\n        if (this.capabilities) {\r\n            for (let capabilityName in this.capabilities) {\r\n                if (!hostCapabilities.hasCapability(capabilityName, this.capabilities[capabilityName])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface IFontSizeDefinitions {\r\n    small: number;\r\n    default: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport interface IFontWeightDefinitions {\r\n    lighter: number;\r\n    default: number;\r\n    bolder: number;\r\n}\r\n\r\nexport class FontTypeDefinition {\r\n    static readonly monospace =  new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    fontSizes: IFontSizeDefinitions = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    fontWeights: IFontWeightDefinitions = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n\r\n    constructor(fontFamily?: string) {\r\n        if (fontFamily) {\r\n            this.fontFamily = fontFamily;\r\n        }\r\n    }\r\n\r\n    parse(obj?: any) {\r\n        this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n        this.fontSizes = {\r\n            small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n            default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n            medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n            large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n            extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n        };\r\n        this.fontWeights = {\r\n            lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n            default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n            bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n        };\r\n    }\r\n}\r\n\r\nexport class FontTypeSet {\r\n    default: FontTypeDefinition;\r\n    monospace: FontTypeDefinition;\r\n\r\n    constructor(obj?: any) {\r\n        this.default = new FontTypeDefinition();\r\n        this.monospace = new FontTypeDefinition(\"'Courier New', Courier, monospace\");\r\n\r\n        if (obj) {\r\n            this.default.parse(obj[\"default\"]);\r\n            this.monospace.parse(obj[\"monospace\"]);\r\n        }\r\n    }\r\n\r\n    getStyleDefinition(style: Enums.FontType): FontTypeDefinition {\r\n        switch (style) {\r\n            case Enums.FontType.Monospace:\r\n                return this.monospace;\r\n            case Enums.FontType.Default:\r\n            default:\r\n                return this.default;\r\n        }\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    readonly hostCapabilities = new HostCapabilities();\r\n\r\n    private _legacyFontType: FontTypeDefinition;\r\n\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n    fontTypes: FontTypeSet = null;\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n    alwaysAllowBleed: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n\r\n            this._legacyFontType = new FontTypeDefinition();\r\n            this._legacyFontType.parse(obj);\r\n\r\n            if (obj.fontTypes) {\r\n                this.fontTypes = new FontTypeSet(obj.fontTypes);\r\n            }\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getFontTypeDefinition(style?: Enums.FontType): FontTypeDefinition {\r\n        if (this.fontTypes) {\r\n            return this.fontTypes.getStyleDefinition(style);\r\n        }\r\n        else {\r\n            return style == Enums.FontType.Monospace ? FontTypeDefinition.monospace : this._legacyFontType;\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n\tpaddingDefinitionToSpacingDefinition(paddingDefinition: Shared.PaddingDefinition): Shared.SpacingDefinition {\r\n\t\treturn new Shared.SpacingDefinition(\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.top),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.right),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.bottom),\r\n\t\t\tthis.getEffectiveSpacing(paddingDefinition.left));\r\n    }\r\n\r\n    makeCssClassNames(...classNames: string[]): string[] {\r\n        let result: string[] = [];\r\n\r\n        for (let className of classNames) {\r\n            result.push((this.cssClassNamePrefix ? this.cssClassNamePrefix + \"-\" : \"\") + className);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = this.makeCssClassNames(...classNames).join(\" \");\r\n\r\n        return result ? result : \"\";\r\n    }\r\n\r\n    get fontFamily(): string {\r\n        return this._legacyFontType.fontFamily;\r\n    }\r\n\r\n    set fontFamily(value: string) {\r\n        this._legacyFontType.fontFamily = value;\r\n    }\r\n\r\n    get fontSizes(): IFontSizeDefinitions {\r\n        return this._legacyFontType.fontSizes;\r\n    }\r\n\r\n    get fontWeights(): IFontWeightDefinitions {\r\n        return this._legacyFontType.fontWeights;\r\n    }\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport * from \"./shared\";\r\nexport * from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport * as Enums from \"./enums\";\r\nimport * as Shared from \"./shared\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nenum InstanceCreationErrorType {\r\n    UnknownType,\r\n    ForbiddenType\r\n}\r\n\r\nfunction createCardObjectInstance<T extends CardObject>(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenTypeNames: string[],\r\n    allowFallback: boolean,\r\n    createInstanceCallback: (typeName: string) => T,\r\n    createValidationErrorCallback: (typeName: string, errorType: InstanceCreationErrorType) => HostConfig.IValidationError,\r\n    errors: Array<HostConfig.IValidationError>): T {\r\n    let result: T = null;\r\n\r\n    if (json && typeof json === \"object\") {\r\n        let tryToFallback = false;\r\n\t\tlet typeName = Utils.getStringValue(json[\"type\"]);\r\n\r\n        if (forbiddenTypeNames && forbiddenTypeNames.indexOf(typeName) >= 0) {\r\n            raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.ForbiddenType), errors);\r\n        }\r\n        else {\r\n            result = createInstanceCallback(typeName);\r\n\r\n            if (!result) {\r\n                tryToFallback = allowFallback;\r\n\r\n                raiseParseError(createValidationErrorCallback(typeName, InstanceCreationErrorType.UnknownType), errors);\r\n            }\r\n            else {\r\n                result.setParent(parent);\r\n                result.parse(json, errors);\r\n\r\n                tryToFallback = result.shouldFallback() && allowFallback;\r\n            }\r\n\r\n            if (tryToFallback) {\r\n                let fallback = json[\"fallback\"];\r\n\r\n                if (!fallback) {\r\n                    parent.setShouldFallback(true);\r\n                }\r\n                if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\r\n                    result = null;\r\n                }\r\n                else if (typeof fallback === \"object\") {\r\n                    result = createCardObjectInstance<T>(\r\n                        parent,\r\n                        fallback,\r\n                        forbiddenTypeNames,\r\n                        true,\r\n                        createInstanceCallback,\r\n                        createValidationErrorCallback,\r\n                        errors);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function createActionInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    forbiddenActionTypes: string[],\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): Action {\r\n    return createCardObjectInstance<Action>(\r\n        parent,\r\n        json,\r\n        forbiddenActionTypes,\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.actionTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownActionType,\r\n                    message: \"Unknown action type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Action type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport function createElementInstance(\r\n    parent: CardElement,\r\n    json: any,\r\n    allowFallback: boolean,\r\n    errors: Array<HostConfig.IValidationError>): CardElement {\r\n    return createCardObjectInstance<CardElement>(\r\n        parent,\r\n        json,\r\n        [], // Forbidden types not supported for elements for now\r\n        allowFallback,\r\n        (typeName: string) => { return AdaptiveCard.elementTypeRegistry.createInstance(typeName); },\r\n        (typeName: string, errorType: InstanceCreationErrorType) => {\r\n            if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                return {\r\n                    error: Enums.ValidationError.UnknownElementType,\r\n                    message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                    message: \"Element type \" + typeName + \" is not allowed in this context.\"\r\n                }\r\n            }\r\n        },\r\n        errors);\r\n}\r\n\r\nexport abstract class SerializableObject {\r\n    private _rawProperties = {};\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._rawProperties = AdaptiveCard.enableFullJsonRoundTrip ? json : {};\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result: any;\r\n\r\n        if (AdaptiveCard.enableFullJsonRoundTrip && this._rawProperties && typeof this._rawProperties === \"object\") {\r\n            result = this._rawProperties;\r\n        }\r\n        else {\r\n            result = {};\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setCustomProperty(name: string, value: any) {\r\n        let deleteProperty = (typeof value === \"string\" && Utils.isNullOrEmpty(value)) || value === undefined || value === null;\r\n\r\n        if (deleteProperty) {\r\n            delete this._rawProperties[name];\r\n        }\r\n        else {\r\n            this._rawProperties[name] = value;\r\n        }\r\n    }\r\n\r\n    getCustomProperty(name: string): any {\r\n        return this._rawProperties[name];\r\n    }\r\n}\r\n\r\nexport class ValidationFailure {\r\n    readonly errors: HostConfig.IValidationError[] = [];\r\n\r\n    constructor(readonly cardObject: CardObject) { }\r\n}\r\n\r\nexport class ValidationResults {\r\n    private getFailureIndex(cardObject: CardObject) {\r\n        for (let i = 0; i < this.failures.length; i++) {\r\n            if (this.failures[i].cardObject === cardObject) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    readonly allIds: Shared.Dictionary<number> = {};\r\n    readonly failures: ValidationFailure[] = [];\r\n\r\n    addFailure(cardObject: CardObject, error: HostConfig.IValidationError) {\r\n        let index = this.getFailureIndex(cardObject);\r\n        let failure: ValidationFailure;\r\n\r\n        if (index < 0) {\r\n            failure = new ValidationFailure(cardObject);\r\n\r\n            this.failures.push(failure);\r\n        }\r\n        else {\r\n            failure = this.failures[index];\r\n        }\r\n\r\n        failure.errors.push(error);\r\n    }\r\n}\r\n\r\nexport abstract class CardObject extends SerializableObject {\r\n    abstract getJsonTypeName(): string;\r\n    abstract shouldFallback(): boolean;\r\n    abstract setParent(parent: CardElement);\r\n\r\n    id: string;\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        if (!Utils.isNullOrEmpty(this.id)) {\r\n            if (context.allIds.hasOwnProperty(this.id)) {\r\n                if (context.allIds[this.id] == 1) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.DuplicateId,\r\n                            message: \"Duplicate Id: \" + this.id\r\n                        });\r\n                }\r\n\r\n                context.allIds[this.id] += 1;\r\n            }\r\n            else {\r\n                context.allIds[this.id] = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(): ValidationResults {\r\n        let result = new ValidationResults();\r\n\r\n        this.internalValidateProperties(result);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport type CardElementHeight = \"auto\" | \"stretch\";\r\n\r\nexport abstract class CardElement extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: Shared.PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        let renderedSeparator = Utils.renderSeparation(\r\n            this.hostConfig,\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n\r\n            if (AdaptiveCard.alwaysBleedSeparators && renderedSeparator && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                let parentContainer = this.getParentContainer();\r\n    \r\n                if (parentContainer && parentContainer.getEffectivePadding()) {\r\n                    let parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\r\n    \r\n                    renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\r\n                    renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\r\n                }\r\n            }\r\n    \r\n            return renderedSeparator;\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        let displayMode = this.isDesignMode() || this.isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = displayMode;\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = displayMode;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this.isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this.isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this.isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this.isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this.isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n\r\n        if (this.minPixelHeight) {\r\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        return this.internalRender();\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (this.separatorElement) {\r\n            if (AdaptiveCard.alwaysBleedSeparators && this.separatorOrientation == Enums.Orientation.Horizontal && !this.isBleeding()) {\r\n                let padding = new Shared.PaddingDefinition();\r\n\r\n                this.getImmediateSurroundingPadding(padding);\r\n\r\n                let physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n            }\r\n            else {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition();\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getPadding(): Shared.PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: Shared.PaddingDefinition) {\r\n        this._padding = value;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    customCssSelector: string = null;\r\n    height: CardElementHeight = \"auto\";\r\n    minPixelHeight?: number = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    asString(): string {\r\n        return \"\";\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n\ttoJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"isVisible\", this.isVisible, true);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        if (this.supportsMinHeight) {\r\n            Utils.setProperty(result, \"minHeight\", typeof this.minPixelHeight === \"number\" && !isNaN(this.minPixelHeight) ? this.minPixelHeight + \"px\" : undefined);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        if (this.parent) {\r\n            return this.parent.getEffectiveStyle();\r\n        }\r\n\r\n        return this.defaultStyle;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    getImmediateSurroundingPadding(\r\n        result: Shared.PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (this.parent) {\r\n            let doProcessTop = processTop && this.parent.isTopElement(this);\r\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\r\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\r\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\r\n\r\n            let effectivePadding = this.parent.getEffectivePadding();\r\n\r\n            if (effectivePadding) {\r\n                if (doProcessTop && effectivePadding.top != Enums.Spacing.None) {\r\n                    result.top = effectivePadding.top;\r\n\r\n                    doProcessTop = false;\r\n                }\r\n\r\n                if (doProcessRight && effectivePadding.right != Enums.Spacing.None) {\r\n                    result.right = effectivePadding.right;\r\n\r\n                    doProcessRight = false;\r\n                }\r\n\r\n                if (doProcessBottom && effectivePadding.bottom != Enums.Spacing.None) {\r\n                    result.bottom = effectivePadding.bottom;\r\n\r\n                    doProcessBottom = false;\r\n                }\r\n\r\n                if (doProcessLeft && effectivePadding.left != Enums.Spacing.None) {\r\n                    result.left = effectivePadding.left;\r\n\r\n                    doProcessLeft = false;\r\n                }\r\n            }\r\n\r\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\r\n                this.parent.getImmediateSurroundingPadding(\r\n                    result,\r\n                    doProcessTop,\r\n                    doProcessRight,\r\n                    doProcessBottom,\r\n                    doProcessLeft);\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n        this.isVisible = Utils.getBoolValue(json[\"isVisible\"], this.isVisible);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n\r\n        this.spacing = Utils.getEnumValue(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = Utils.getBoolValue(json[\"separator\"], this.separator);\r\n\r\n        let jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n\r\n        if (this.supportsMinHeight) {\r\n            let jsonMinHeight = json[\"minHeight\"];\r\n\r\n            if (jsonMinHeight && typeof jsonMinHeight === \"string\") {\r\n                let isValid = false;\r\n\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(jsonMinHeight, true);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        this.minPixelHeight = size.physicalSize;\r\n\r\n                        isValid = true;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Do nothing. A parse error is emitted below\r\n                }\r\n\r\n                if (!isValid) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.InvalidPropertyValue,\r\n                            message: \"Invalid \\\"minHeight\\\" value: \" + jsonMinHeight\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.minPixelHeight = null;\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.overrideInternalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n        this.applyPadding();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this.isFirstElement(element);\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this.isLastElement(element);\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    setShouldFallback(value: boolean) {\r\n        this._shouldFallback = value;\r\n    }\r\n\r\n    getEffectivePadding(): Shared.PaddingDefinition {\r\n        let padding = this.getPadding();\r\n\r\n        return (padding && this.allowCustomPadding) ? padding : this.getDefaultPadding();\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.separatorElement) {\r\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class BaseTextBlock extends CardElement {\r\n    private _text: string;\r\n    private _selectAction: Action = null;\r\n\r\n    protected getEffectiveStyleDefinition() {\r\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\r\n    }\r\n\r\n    protected getFontSize(fontType: HostConfig.FontTypeDefinition): number {\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                return fontType.fontSizes.small;\r\n            case Enums.TextSize.Medium:\r\n                return fontType.fontSizes.medium;\r\n            case Enums.TextSize.Large:\r\n                return fontType.fontSizes.large;\r\n            case Enums.TextSize.ExtraLarge:\r\n                return fontType.fontSizes.extraLarge;\r\n            default:\r\n                return fontType.fontSizes.default;\r\n        }\r\n    }\r\n\r\n    protected getColorDefinition(colorSet: HostConfig.ColorSetDefinition, color: Enums.TextColor): HostConfig.TextColorDefinition {\r\n        switch (color) {\r\n            case Enums.TextColor.Accent:\r\n                return colorSet.accent;\r\n            case Enums.TextColor.Dark:\r\n                return colorSet.dark;\r\n            case Enums.TextColor.Light:\r\n                return colorSet.light;\r\n            case Enums.TextColor.Good:\r\n                return colorSet.good;\r\n            case Enums.TextColor.Warning:\r\n                return colorSet.warning;\r\n            case Enums.TextColor.Attention:\r\n                return colorSet.attention;\r\n            default:\r\n                return colorSet.default;\r\n        }\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        this._text = value;\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    fontType?: Enums.FontType = null;\r\n\r\n    asString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setEnumProperty(Enums.FontType, result, \"fontType\", this.fontType, Enums.FontType.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        let fontType = this.hostConfig.getFontTypeDefinition(this.fontType);\r\n\r\n        if (fontType.fontFamily) {\r\n            targetElement.style.fontFamily = fontType.fontFamily;\r\n        }\r\n\r\n        let fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = fontType.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = fontType.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = fontType.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = fontType.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = fontType.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n\r\n        let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        let fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = fontType.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = fontType.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = fontType.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = Utils.getStringValue(json[\"text\"]);\r\n\r\n        let sizeString = Utils.getStringValue(json[\"size\"]);\r\n\r\n        if (sizeString && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValue(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        let weightString = Utils.getStringValue(json[\"weight\"]);\r\n\r\n        if (weightString && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValue(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValue(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = Utils.getBoolValue(json[\"isSubtle\"], this.isSubtle);\r\n        this.fontType = Utils.getEnumValue(Enums.FontType, json[\"fontType\"], this.fontType);\r\n    }\r\n\r\n    get effectiveColor(): Enums.TextColor {\r\n        return this.color ? this.color : Enums.TextColor.Default;\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        this.setText(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class TextBlock extends BaseTextBlock {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _processedText: string = null;\r\n    private _treatAsPlainText: boolean = true;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected setText(value: string) {\r\n        super.setText(value);\r\n\r\n        this._processedText = null;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._processedText = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                if (hostConfig.supportsInteractivity) {\r\n                    element.tabIndex = 0\r\n                    element.setAttribute(\"role\", \"button\");\r\n                    element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                this._treatAsPlainText = true;\r\n\r\n                let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                if (this.useMarkdown) {\r\n                    if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                        formattedText = formattedText.replace(/<mark>/g, \"===\").replace(/<\\/mark>/g, \"/==\");\r\n                    }\r\n\r\n                    let markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\r\n\r\n                    if (markdownProcessingResult.didProcess && markdownProcessingResult.outputHtml) {\r\n                        this._processedText = markdownProcessingResult.outputHtml;\r\n                        this._treatAsPlainText = false;\r\n\r\n                        // Only process <mark> tag if markdown processing was applied because\r\n                        // markdown processing is also responsible for sanitizing the input string\r\n                        if (AdaptiveCard.allowMarkForTextHighlighting) {\r\n                            let markStyle: string = \"\";\r\n                            let effectiveStyle = this.getEffectiveStyleDefinition();\r\n\r\n                            if (effectiveStyle.highlightBackgroundColor) {\r\n                                markStyle += \"background-color: \" + effectiveStyle.highlightBackgroundColor + \";\";\r\n                            }\r\n\r\n                            if (effectiveStyle.highlightForegroundColor) {\r\n                                markStyle += \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\r\n                            }\r\n\r\n                            if (!Utils.isNullOrEmpty(markStyle)) {\r\n                                markStyle = 'style=\"' + markStyle + '\"';\r\n                            }\r\n\r\n                            this._processedText = this._processedText.replace(/===/g, \"<mark \" + markStyle + \">\").replace(/\\/==/g, \"</mark>\");\r\n                        }\r\n                    } else {\r\n                        this._processedText = formattedText;\r\n                        this._treatAsPlainText = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._processedText = formattedText;\r\n                    this._treatAsPlainText = true;\r\n                }\r\n            }\r\n\r\n            if (this._treatAsPlainText) {\r\n                element.innerText = this._processedText;\r\n            }\r\n            else {\r\n                element.innerHTML = this._processedText;\r\n            }\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                let firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            let anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (let i = 0; i < anchors.length; i++) {\r\n                let anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        let parentContainer = this.getParentContainer();\r\n        let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                break;\r\n        }\r\n\r\n        let lineHeights = this.hostConfig.lineHeights;\r\n\r\n        if (lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = this.getFontSize(this.hostConfig.getFontTypeDefinition(this.fontType)) * 1.33;\r\n        }\r\n\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class TextRun extends BaseTextBlock {\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n            let element = document.createElement(\"span\");\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                let anchor = document.createElement(\"a\");\r\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.href = this.selectAction.getHref();\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n\r\n                anchor.innerText = formattedText;\r\n\r\n                element.appendChild(anchor);\r\n            }\r\n            else {\r\n                element.innerText = formattedText;\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    italic: boolean = false;\r\n    strikethrough: boolean = false;\r\n    highlight: boolean = false;\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        super.applyStylesTo(targetElement);\r\n\r\n        if (this.italic) {\r\n            targetElement.style.fontStyle = \"italic\";\r\n        }\r\n\r\n        if (this.strikethrough) {\r\n            targetElement.style.textDecoration = \"line-through\";\r\n        }\r\n\r\n        if (this.highlight) {\r\n            let colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\r\n\r\n            targetElement.style.backgroundColor = Utils.stringToCssColor(this.isSubtle ? colorDefinition.highlightColors.subtle : colorDefinition.highlightColors.default);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"italic\", this.italic, false);\r\n        Utils.setProperty(result, \"strikethrough\", this.strikethrough, false);\r\n        Utils.setProperty(result, \"highlight\", this.highlight, false);\r\n\r\n        if (this.selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.italic = Utils.getBoolValue(json[\"italic\"], this.italic);\r\n        this.strikethrough = Utils.getBoolValue(json[\"strikethrough\"], this.strikethrough);\r\n        this.highlight = Utils.getBoolValue(json[\"highlight\"], this.highlight);\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextRun\";\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isInline(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class RichTextBlock extends CardElement {\r\n    private _inlines: CardElement[] = [];\r\n\r\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\r\n        if (!inline.isInline) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\");\r\n        }\r\n\r\n        let doAdd: boolean = inline.parent == null || forceAdd;\r\n\r\n        if (!doAdd && inline.parent != this) {\r\n            throw new Error(\"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\");\r\n        }\r\n        else {\r\n            inline.setParent(this);\r\n\r\n            this._inlines.push(inline);\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._inlines.length > 0) {\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\r\n\r\n            let parentContainer = this.getParentContainer();\r\n            let isRtl = parentContainer ? parentContainer.isRtl() : false;\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.textAlign = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.textAlign = isRtl ? \"left\" : \"right\";\r\n                    break;\r\n                default:\r\n                    element.style.textAlign = isRtl ? \"right\" : \"left\";\r\n                    break;\r\n            }\r\n\r\n            for (let inline of this._inlines) {\r\n                element.appendChild(inline.render());\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    asString(): string {\r\n        let result = \"\";\r\n\r\n        for (let inline of this._inlines) {\r\n            result += inline.asString();\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._inlines = [];\r\n\r\n        if (Array.isArray(json[\"inlines\"])) {\r\n            for (let jsonInline of json[\"inlines\"]) {\r\n                let inline: CardElement;\r\n\r\n                if (typeof jsonInline === \"string\") {\r\n                    let textRun = new TextRun();\r\n                    textRun.text = jsonInline;\r\n\r\n                    inline = textRun;\r\n                }\r\n                else {\r\n                    inline = createElementInstance(\r\n                        this,\r\n                        jsonInline,\r\n                        false, // No fallback for inlines in 1.2\r\n                        errors);\r\n                }\r\n\r\n                if (inline) {\r\n                    this.internalAddInline(inline, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._inlines.length > 0) {\r\n            let jsonInlines: any[] = [];\r\n\r\n            for (let inline of this._inlines) {\r\n                jsonInlines.push(inline.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"inlines\", jsonInlines);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"RichTextBlock\";\r\n    }\r\n\r\n    getInlineCount(): number {\r\n        return this._inlines.length;\r\n    }\r\n\r\n    getInlineAt(index: number): CardElement {\r\n        if (index >= 0 && index < this._inlines.length) {\r\n            return this._inlines[index];\r\n        }\r\n        else {\r\n            throw new Error(\"RichTextBlock.getInlineAt: Index out of range (\" + index + \")\");\r\n        }\r\n    }\r\n\r\n    addInline(inline: CardElement) {\r\n        this.internalAddInline(inline);\r\n    }\r\n\r\n    removeInline(inline: CardElement): boolean {\r\n        let index = this._inlines.indexOf(inline);\r\n\r\n        if (index >= 0) {\r\n            this._inlines[index].setParent(null);\r\n            this._inlines.splice(index, 1);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class Fact extends SerializableObject {\r\n    name: string;\r\n    value: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"title\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.name);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (let i = 0; i < this.facts.length; i++) {\r\n                let trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                // Title column\r\n                let tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                let textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = hostConfig.factSet.title.size;\r\n                textBlock.color = hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.title.weight;\r\n                textBlock.wrap = hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Spacer column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.width = \"10px\";\r\n\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                // Value column\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.setParent(this);\r\n                textBlock.text = this.facts[i].value;\r\n                textBlock.size = hostConfig.factSet.value.size;\r\n                textBlock.color = hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = hostConfig.factSet.value.weight;\r\n                textBlock.wrap = hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setArrayProperty(result, \"facts\", this.facts);\r\n\r\n        /*\r\n        let facts = [];\r\n\r\n\t\tif (this.facts) {\r\n\t\t\tfor (let fact of this.facts) {\r\n\t\t\t\tfacts.push(fact.toJSON());\r\n\t\t\t}\r\n\t\t}\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n        */\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n\t\tlet jsonFacts = json[\"facts\"];\r\n\r\n\t\tif (Array.isArray(jsonFacts)) {\r\n\t\t\tfor (let jsonFact of jsonFacts) {\r\n\t\t\t\tlet fact = new Fact();\r\n\t\t\t\tfact.parse(jsonFact);\r\n\r\n\t\t\t\tthis.facts.push(fact);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<HostConfig.IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Shared.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction && (e.keyCode == 13 || e.keyCode == 32)) { // enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this.selectAction.execute();\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Shared.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.backgroundColor = Utils.getStringValue(json[\"backgroundColor\"]);\r\n\r\n        let styleString = Utils.getStringValue(json[\"style\"]);\r\n\r\n        if (styleString && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValue(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValue(Enums.Size, json[\"size\"], this.size);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        this.selectAction = createActionInstance(\r\n            this,\r\n            json[\"selectAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    private _selectAction: Action = null;\r\n\r\n    protected isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (let forbiddenElementType of forbiddenElementTypes) {\r\n                if (element.getJsonTypeName() === forbiddenElementType) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        this.renderedElement.style.marginRight = \"0\";\r\n        this.renderedElement.style.marginLeft = \"0\";\r\n    }\r\n\r\n    protected getSelectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    protected setSelectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract getFirstVisibleRenderedItem(): CardElement;\r\n    abstract getLastVisibleRenderedItem(): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n\r\n    allowVerticalOverflow: boolean = false;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (this.isSelectable) {\r\n            this._selectAction = createActionInstance(\r\n                this,\r\n                json[\"selectAction\"],\r\n                [ShowCardAction.JsonTypeName],\r\n                !this.isDesignMode(),\r\n                errors);\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction && this.isSelectable) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        for (let i = 0; i < this.getItemCount(); i++) {\r\n            let item = this.getItemAt(i);\r\n\r\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(item, this.getForbiddenElementTypes())) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + item.getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let element = super.render();\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.allowVerticalOverflow) {\r\n            element.style.overflowX = \"hidden\";\r\n            element.style.overflowY = \"auto\";\r\n        }\r\n\r\n        if (element && this.isSelectable && this._selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this._selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this._selectAction != null) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this._selectAction != null && (e.keyCode == 13 || e.keyCode == 32)) {\r\n                    // Enter or space pressed\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    this._selectAction.execute();\r\n                }\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                this.getItemAt(i).updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        let result = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this.getItemCount(); i++) {\r\n                result = this.getItemAt(i).getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[0] : null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        return this._images && this._images.length > 0 ? this._images[this._images.length - 1] : null;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValue(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n}\r\n\r\nexport class MediaSource extends SerializableObject {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        super();\r\n\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.mimeType = Utils.getStringValue(json[\"mimeType\"]);\r\n\t\tthis.url = Utils.getStringValue(json[\"url\"]);\r\n\t}\r\n\r\n\ttoJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"mimeType\", this.mimeType);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n        for (let source of this.sources) {\r\n            let mimeComponents = source.mimeType ? source.mimeType.split('/') : [];\r\n\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton\");\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    e.preventDefault();\r\n                    e.cancelBubble = true;\r\n\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        e.preventDefault();\r\n                        e.cancelBubble = true;\r\n\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n\t\tthis.poster = Utils.getStringValue(json[\"poster\"]);\r\n\t\tthis.altText = Utils.getStringValue(json[\"altText\"]);\r\n\r\n        this.sources = [];\r\n\r\n        if (Array.isArray(json[\"sources\"])) {\r\n            for (let jsonSource of json[\"sources\"]) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSource, errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        /*\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"sources\", this.sources);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport class InputValidationOptions extends SerializableObject {\r\n    necessity: Enums.InputValidationNecessity = Enums.InputValidationNecessity.Optional;\r\n    errorMessage: string = undefined;\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.necessity = Utils.getEnumValue(Enums.InputValidationNecessity, json[\"necessity\"], this.necessity);\r\n        this.errorMessage = Utils.getStringValue(json[\"errorMessage\"]);\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.necessity != Enums.InputValidationNecessity.Optional || !Utils.isNullOrEmpty(this.errorMessage)) {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setEnumProperty(Enums.InputValidationNecessity, result, \"necessity\", this.necessity, Enums.InputValidationNecessity.Optional);\r\n            Utils.setProperty(result, \"errorMessage\", this.errorMessage);\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Shared.IInput {\r\n    private _outerContainerElement: HTMLElement;\r\n    private _inputControlContainerElement: HTMLElement;\r\n    private _errorMessageElement: HTMLElement;\r\n    private _renderedInputControlElement: HTMLElement;\r\n    private _defaultValue: string;\r\n\r\n    protected get isNullable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get renderedInputControlElement(): HTMLElement {\r\n        return this._renderedInputControlElement;\r\n    }\r\n\r\n    protected get inputControlContainerElement(): HTMLElement {\r\n        return this._inputControlContainerElement;\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let hostConfig = this.hostConfig;\r\n\r\n        this._outerContainerElement = document.createElement(\"div\");\r\n        this._outerContainerElement.style.display = \"flex\";\r\n        this._outerContainerElement.style.flexDirection = \"column\";\r\n\r\n        this._inputControlContainerElement = document.createElement(\"div\");\r\n        this._inputControlContainerElement.className = hostConfig.makeCssClassName(\"ac-input-container\");\r\n        this._inputControlContainerElement.style.display = \"flex\";\r\n\r\n        this._renderedInputControlElement = this.internalRender();\r\n        this._renderedInputControlElement.style.minWidth = \"0px\";\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.isNullable && this.validation.necessity == Enums.InputValidationNecessity.RequiredWithVisualCue) {\r\n            this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\r\n        }\r\n\r\n        this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\r\n\r\n        this._outerContainerElement.appendChild(this._inputControlContainerElement);\r\n\r\n        return this._outerContainerElement;\r\n    }\r\n\r\n    protected valueChanged() {\r\n        this.resetValidationFailureCue();\r\n\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n\r\n        raiseInputValueChangedEvent(this);\r\n    }\r\n\r\n    protected resetValidationFailureCue() {\r\n        if (AdaptiveCard.useBuiltInInputValidation && this.renderedElement) {\r\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n            if (this._errorMessageElement) {\r\n                this._outerContainerElement.removeChild(this._errorMessageElement);\r\n\r\n                this._errorMessageElement = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected showValidationErrorMessage() {\r\n        if (this.renderedElement && AdaptiveCard.useBuiltInInputValidation && AdaptiveCard.displayInputValidationErrors && !Utils.isNullOrEmpty(this.validation.errorMessage)) {\r\n            this._errorMessageElement = document.createElement(\"span\");\r\n            this._errorMessageElement.className = this.hostConfig.makeCssClassName(\"ac-input-validation-error-message\");\r\n            this._errorMessageElement.textContent = this.validation.errorMessage;\r\n\r\n            this._outerContainerElement.appendChild(this._errorMessageElement);\r\n        }\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    readonly validation = new InputValidationOptions();\r\n\r\n    title: string;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement && !Utils.isNullOrEmpty(this.value) ? this.value : this.defaultValue);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            Utils.setProperty(result, \"validation\", this.validation.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.id)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"All inputs must have a unique Id\"\r\n                });\r\n        }\r\n    }\r\n\r\n    validateValue(): boolean {\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            this.resetValidationFailureCue();\r\n\r\n            let result = this.validation.necessity != Enums.InputValidationNecessity.Optional ? !Utils.isNullOrEmpty(this.value) : true;\r\n\r\n            if (!result && this.renderedElement) {\r\n                this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\r\n\r\n                this.showValidationErrorMessage();\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = Utils.getStringValue(json[\"id\"]);\r\n        this.defaultValue = Utils.getStringValue(json[\"value\"]);\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation) {\r\n            let jsonValidation = json[\"validation\"];\r\n\r\n            if (jsonValidation) {\r\n                this.validation.parse(jsonValidation);\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get defaultValue(): string {\r\n        return this._defaultValue;\r\n    }\r\n\r\n    set defaultValue(value: string) {\r\n        this._defaultValue = this.parseInputValue(value);\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _inlineAction: Action;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            let textareaElement = document.createElement(\"textarea\");\r\n            textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            textareaElement.style.flex = \"1 1 auto\";\r\n            textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                textareaElement.placeholder = this.placeholder;\r\n                textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            textareaElement.oninput = () => { this.valueChanged(); }\r\n            textareaElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Ctrl+Enter pressed\r\n                if (e.keyCode == 10 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return textareaElement;\r\n        }\r\n        else {\r\n            let inputElement = document.createElement(\"input\");\r\n            inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            inputElement.style.flex = \"1 1 auto\";\r\n            inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                inputElement.placeholder = this.placeholder;\r\n                inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            inputElement.oninput = () => { this.valueChanged(); }\r\n            inputElement.onkeypress = (e: KeyboardEvent) => {\r\n                // Enter pressed\r\n                if (e.keyCode == 13 && this.inlineAction) {\r\n                    this.inlineAction.execute();\r\n                }\r\n            }\r\n\r\n            return inputElement;\r\n        }\r\n    }\r\n\r\n    protected overrideInternalRender(): HTMLElement {\r\n        let renderedInputControl = super.overrideInternalRender();\r\n\r\n        if (this.inlineAction) {\r\n            let button = document.createElement(\"button\");\r\n            button.className = this.hostConfig.makeCssClassName(\"ac-inlineActionButton\");\r\n            button.onclick = (e) => {\r\n                e.preventDefault();\r\n                e.cancelBubble = true;\r\n\r\n                this.inlineAction.execute();\r\n            };\r\n\r\n            if (!Utils.isNullOrEmpty(this.inlineAction.iconUrl)) {\r\n                button.classList.add(\"iconOnly\");\r\n\r\n                let icon = document.createElement(\"img\");\r\n                icon.style.height = \"100%\";\r\n\r\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\r\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\r\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\r\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\r\n                icon.style.display = \"none\";\r\n                icon.onload = () => {\r\n                    icon.style.removeProperty(\"display\");\r\n                };\r\n                icon.onerror = () => {\r\n                    button.removeChild(icon);\r\n                    button.classList.remove(\"iconOnly\");\r\n                    button.classList.add(\"textOnly\");\r\n                    button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n                }\r\n                icon.src = this.inlineAction.iconUrl;\r\n\r\n                button.appendChild(icon);\r\n\r\n                if (!Utils.isNullOrEmpty(this.inlineAction.title)) {\r\n                    button.title = this.inlineAction.title;\r\n                }\r\n            }\r\n            else {\r\n                button.classList.add(\"textOnly\");\r\n                button.textContent = !Utils.isNullOrEmpty(this.inlineAction.title) ? this.inlineAction.title : \"Title\";\r\n            }\r\n\r\n            button.style.marginLeft = \"8px\";\r\n\r\n            this.inputControlContainerElement.appendChild(button);\r\n        }\r\n\r\n        return renderedInputControl;\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean = false;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        let result = super.getActionById(id);\r\n\r\n        if (!result && this.inlineAction) {\r\n            result = this.inlineAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        if (this._inlineAction) {\r\n            Utils.setProperty(result, \"inlineAction\", this._inlineAction.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = Utils.getBoolValue(json[\"isMultiline\"], this.isMultiline);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.style = Utils.getEnumValue(Enums.InputTextStyle, json[\"style\"], this.style);\r\n        this.inlineAction = createActionInstance(\r\n            this,\r\n            json[\"inlineAction\"],\r\n            [ShowCardAction.JsonTypeName],\r\n            !this.isDesignMode(),\r\n            errors);\r\n    }\r\n\r\n    get inlineAction(): Action {\r\n        return this._inlineAction;\r\n    }\r\n\r\n    set inlineAction(value: Action) {\r\n        this._inlineAction = value;\r\n\r\n        if (this._inlineAction) {\r\n            this._inlineAction.setParent(this);\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.renderedInputControlElement) {\r\n            if (this.isMultiline) {\r\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\r\n            }\r\n            else {\r\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = Utils.generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            let label = new Label();\r\n            label.setParent(this);\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            label.wrap = this.wrap;\r\n\r\n            let labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            let spacerElement = document.createElement(\"div\");\r\n            spacerElement.style.width = \"6px\";\r\n\r\n            Utils.appendChild(element, spacerElement);\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected get isNullable(): boolean {\r\n        return false;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        Utils.setProperty(result, \"wrap\", this.wrap);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.valueOn = Utils.getStringValue(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getStringValue(json[\"valueOff\"], this.valueOff);\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice extends SerializableObject {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        super();\r\n\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"], \"\");\r\n        this.value = Utils.getStringValue(json[\"value\"], \"\");\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.value);\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                let option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                let element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-expanded\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (let i = 0; i < this.choices.length; i++) {\r\n                    let radioInput = document.createElement(\"input\");\r\n                    radioInput.id = Utils.generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    let label = new Label();\r\n                    label.setParent(this);\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    label.wrap = this.wrap;\r\n\r\n                    let labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    let spacerElement = document.createElement(\"div\");\r\n                    spacerElement.style.width = \"6px\";\r\n\r\n                    let compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    compoundInput.style.alignItems = \"center\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, spacerElement);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            let defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-multiSelect\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (let i = 0; i < this.choices.length; i++) {\r\n                let checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = Utils.generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                let label = new Label();\r\n                label.setParent(this);\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                label.wrap = this.wrap;\r\n\r\n                let labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                let spacerElement = document.createElement(\"div\");\r\n                spacerElement.style.width = \"6px\";\r\n\r\n                let compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, spacerElement);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean = false;\r\n    isMultiSelect: boolean = false;\r\n    placeholder: string;\r\n    wrap: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        /*\r\n        let choices = [];\r\n\r\n        if (this.choices) {\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n        }\r\n\r\n        Utils.setProperty(result, \"choices\", choices);\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"choices\", this.choices);\r\n\r\n        Utils.setProperty(result, \"style\", this.isCompact ? null : \"expanded\");\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this.choices.length == 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.CollectionCantBeEmpty,\r\n                    message: \"An Input.ChoiceSet must have at least one choice defined.\"\r\n                });\r\n        }\r\n\r\n        for (let choice of this.choices) {\r\n            if (!choice.title || !choice.value) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.PropertyCantBeNull,\r\n                        message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\"\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = Utils.getBoolValue(json[\"isMultiSelect\"], this.isMultiSelect);\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n\r\n        this.choices = [];\r\n\r\n        if (Array.isArray(json[\"choices\"])) {\r\n            for (let jsonChoice of json[\"choices\"]) {\r\n                let choice = new Choice();\r\n                choice.parse(jsonChoice);\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n\r\n        this.wrap = Utils.getBoolValue(json[\"wrap\"], this.wrap);\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                if (this._selectElement) {\r\n                    return this._selectElement.selectedIndex > 0 ? this._selectElement.value : null;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = Utils.getStringValue(json[\"placeholder\"]);\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.setAttribute(\"min\", this.min);\r\n        this._dateInputElement.setAttribute(\"max\", this.max);\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        this._dateInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n    private _min: string;\r\n    private _max: string;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.setAttribute(\"min\", this.min);\r\n        this._timeInputElement.setAttribute(\"max\", this.max);\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        this._timeInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    protected parseInputValue(value: string): string {\r\n        if (/^[0-9]{2}:[0-9]{2}$/.test(value)) {\r\n            return value;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.min = Utils.getStringValue(json[\"min\"]);\r\n        this.max = Utils.getStringValue(json[\"max\"]);\r\n    }\r\n\r\n    get min(): string {\r\n        return this._min;\r\n    }\r\n\r\n    set min(value: string) {\r\n        this._min = this.parseInputValue(value);\r\n    }\r\n\r\n    get max(): string {\r\n        return this._max;\r\n    }\r\n\r\n    set max(value: string) {\r\n        this._max = this.parseInputValue(value);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        if (!Utils.isNullOrEmpty(this._parentContainerStyle)) {\r\n            this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        }\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.action.style)) {\r\n            if (this.action.style === Enums.ActionStyle.Positive) {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\r\n            }\r\n            else {\r\n                this.action.renderedElement.classList.add(...hostConfig.makeCssClassNames(\"style-\" + this.action.style.toLowerCase()));\r\n             }\r\n        }\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render(alignment: Enums.ActionAlignment) {\r\n        this.action.render();\r\n        this.action.renderedElement.style.flex = alignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n        this.action.renderedElement.onclick = (e) => {\r\n            e.preventDefault();\r\n            e.cancelBubble = true;\r\n\r\n            this.click();\r\n        };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action extends CardObject {\r\n    private _shouldFallback: boolean = false;\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        return {};\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    protected internalValidateInputs(referencedInputs: Shared.Dictionary<Input>): Array<Input> {\r\n        let result: Input[] = [];\r\n\r\n        if (AdaptiveCard.useBuiltInInputValidation && !this.ignoreInputValidation) {\r\n            for (let key of Object.keys(referencedInputs)) {\r\n                let input = referencedInputs[key];\r\n\r\n                if (!input.validateValue()) {\r\n                    result.push(input);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    readonly requires = new HostConfig.HostCapabilities();\r\n\r\n    title: string;\r\n    iconUrl: string;\r\n    style: string = Enums.ActionStyle.Default;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    getHref(): string {\r\n        return \"\";\r\n    }\r\n\r\n    toJSON(): any {\r\n\t\tlet result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        Utils.setProperty(result, \"style\", this.style, Enums.ActionStyle.Default);\r\n\r\n        return result;\r\n    }\r\n\r\n    render(baseCssClass: string = \"ac-pushButton\") {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        let buttonElement = document.createElement(\"button\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    prepareForExecution(): boolean {\r\n        let referencedInputs = this.getReferencedInputs();\r\n\r\n        if (this.internalValidateInputs(referencedInputs).length > 0) {\r\n            return false;\r\n        }\r\n\r\n        this.internalPrepareForExecution(referencedInputs);\r\n\r\n        return true;\r\n    };\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n\t\tsuper.parse(json, errors);\r\n\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.requires.parse(json[\"requires\"], errors);\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = Utils.getStringValue(json[\"title\"]);\r\n        this.iconUrl = Utils.getStringValue(json[\"iconUrl\"]);\r\n        this.style = Utils.getStringValue(json[\"style\"], this.style);\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    getReferencedInputs(): Shared.Dictionary<Input> {\r\n        return this.internalGetReferencedInputs(this.parent.getRootElement().getAllInputs());\r\n    }\r\n\r\n    validateInputs() {\r\n        return this.internalValidateInputs(this.getReferencedInputs());\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return this._shouldFallback || !this.requires.areAllMet(this.parent.hostConfig.hostCapabilities);\r\n    }\r\n\r\n    get isPrimary(): boolean {\r\n        return this.style == Enums.ActionStyle.Positive;\r\n    }\r\n\r\n    set isPrimary(value: boolean) {\r\n        if (value) {\r\n            this.style = Enums.ActionStyle.Positive;\r\n        }\r\n        else {\r\n            if (this.style == Enums.ActionStyle.Positive) {\r\n                this.style = Enums.ActionStyle.Default;\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Submit\";\r\n\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        for (let input of allInputs) {\r\n            result[input.id] = input;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (let key of Object.keys(inputs)) {\r\n            let input = inputs[key];\r\n\r\n            if (input.value != null) {\r\n                this._processedData[input.id] = input.value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return SubmitAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    static readonly JsonTypeName = \"Action.OpenUrl\";\r\n\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return OpenUrlAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.OpenUrl must have its url property set.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n    }\r\n\r\n    getHref(): string {\r\n        return this.url;\r\n    }\r\n}\r\n\r\nexport class ToggleVisibilityAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ToggleVisibility\";\r\n\r\n    targetElements = {}\r\n\r\n    getJsonTypeName(): string {\r\n        return ToggleVisibilityAction.JsonTypeName;\r\n    }\r\n\r\n    execute() {\r\n        for (let elementId of Object.keys(this.targetElements)) {\r\n            let targetElement = this.parent.getRootElement().getElementById(elementId);\r\n\r\n            if (targetElement) {\r\n                if (typeof this.targetElements[elementId] === \"boolean\") {\r\n                    targetElement.isVisible = this.targetElements[elementId];\r\n                }\r\n                else {\r\n                    targetElement.isVisible = !targetElement.isVisible;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.targetElements = {};\r\n\r\n        let jsonTargetElements = json[\"targetElements\"];\r\n\r\n        if (jsonTargetElements && Array.isArray(jsonTargetElements)) {\r\n            for (let item of jsonTargetElements) {\r\n                if (typeof item === \"string\") {\r\n                    this.targetElements[item] = undefined;\r\n                }\r\n                else if (typeof item === \"object\") {\r\n                    let jsonElementId = item[\"elementId\"];\r\n\r\n                    if (jsonElementId && typeof jsonElementId === \"string\") {\r\n                        this.targetElements[jsonElementId] = Utils.getBoolValue(item[\"isVisible\"], undefined);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let targetElements: any[] = [];\r\n\r\n        for (let id of Object.keys(this.targetElements)) {\r\n            if (typeof this.targetElements[id] === \"boolean\") {\r\n                targetElements.push(\r\n                    {\r\n                        elementId: id,\r\n                        isVisible: this.targetElements[id]\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                targetElements.push(id);\r\n            }\r\n        }\r\n\r\n        result[\"targetElements\"] = targetElements;\r\n\r\n        return result;\r\n    }\r\n\r\n    addTargetElement(elementId: string, isVisible: boolean = undefined) {\r\n        this.targetElements[elementId] = isVisible;\r\n    }\r\n\r\n    removeTargetElement(elementId) {\r\n        delete this.targetElements[elementId];\r\n    }\r\n}\r\n\r\nexport class HttpHeader extends SerializableObject {\r\n    private _value = new Shared.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        super();\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    parse(json: any) {\r\n        super.parse(json);\r\n\r\n        this.name = Utils.getStringValue(json[\"name\"]);\r\n        this.value = Utils.getStringValue(json[\"value\"]);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"name\", this.name);\r\n        Utils.setProperty(result, \"value\", this._value.getOriginal());\r\n\r\n        return result;\r\n    }\r\n\r\n    getReferencedInputs(inputs: Array<Input>, referencedInputs: Shared.Dictionary<Input>) {\r\n        this._value.getReferencedInputs(inputs, referencedInputs);\r\n    }\r\n\r\n    prepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._value.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    static readonly JsonTypeName = \"Action.Http\";\r\n\r\n    private _url = new Shared.StringWithSubstitutions();\r\n    private _body = new Shared.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n    private _ignoreInputValidation: boolean = false;\r\n\r\n    protected internalGetReferencedInputs(allInputs: Array<Input>): Shared.Dictionary<Input> {\r\n        let result: Shared.Dictionary<Input> = {};\r\n\r\n        this._url.getReferencedInputs(allInputs, result);\r\n\r\n        for (let header of this._headers) {\r\n            header.getReferencedInputs(allInputs, result);\r\n        }\r\n\r\n        this._body.getReferencedInputs(allInputs, result);\r\n\r\n        return result;\r\n    }\r\n\r\n    protected internalPrepareForExecution(inputs: Shared.Dictionary<Input>) {\r\n        this._url.substituteInputValues(inputs, Shared.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Shared.ContentTypes.applicationJson;\r\n\r\n        for (let header of this._headers) {\r\n            header.prepareForExecution(inputs);\r\n\r\n            if (header.name && header.name.toLowerCase() == \"content-type\") {\r\n                contentType = header.value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return HttpAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        Utils.setProperty(result, \"ignoreInputValidation\", this.ignoreInputValidation, false);\r\n\r\n        /*\r\n        let headers = [];\r\n\r\n        for (let header of this.headers) {\r\n            headers.push(header.toJSON());\r\n        }\r\n\r\n        Utils.setProperty(result, \"headers\", headers);\r\n        */\r\n\r\n        Utils.setArrayProperty(result, \"headers\", this.headers);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (Utils.isNullOrEmpty(this.url)) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.Http must have its url property set.\"\r\n                });\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (let header of this.headers) {\r\n                if (!header.name) {\r\n                    context.addFailure(\r\n                        this,\r\n                        {\r\n                            error: Enums.ValidationError.PropertyCantBeNull,\r\n                            message: \"All headers of an Action.Http must have their name and value properties set.\"\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.method = Utils.getStringValue(json[\"method\"]);\r\n        this.body = Utils.getStringValue(json[\"body\"]);\r\n        this._ignoreInputValidation = Utils.getBoolValue(json[\"ignoreInputValidation\"], this._ignoreInputValidation);\r\n\r\n        this._headers = [];\r\n\r\n        if (Array.isArray(json[\"headers\"])) {\r\n            for (let jsonHeader of json[\"headers\"]) {\r\n                let httpHeader = new HttpHeader();\r\n                httpHeader.parse(jsonHeader);\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get ignoreInputValidation(): boolean {\r\n        return this._ignoreInputValidation;\r\n    }\r\n\r\n    set ignoreInputValidation(value: boolean) {\r\n        this._ignoreInputValidation = value;\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    static readonly JsonTypeName = \"Action.ShowCard\";\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return ShowCardAction.JsonTypeName;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this.card.internalValidateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        let jsonCard = json[\"card\"];\r\n\r\n        if (jsonCard) {\r\n            this.card.parse(jsonCard, errors);\r\n        }\r\n        else {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null) {\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        let padding = this._owner.getEffectivePadding();\r\n\r\n        this._owner.getImmediateSurroundingPadding(padding);\r\n\r\n        let physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\r\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\r\n\r\n            if (physicalPadding.bottom != 0 && !this._owner.isDesignMode()) {\r\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\r\n            }\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this.clear();\r\n\r\n        if (json && json instanceof Array) {\r\n            for (let jsonAction of json) {\r\n                let action = createActionInstance(\r\n                    this._owner,\r\n                    jsonAction,\r\n                    [],\r\n                    !this._owner.isDesignMode(),\r\n                    errors);\r\n\r\n                if (action) {\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validateProperties(context: ValidationResults) {\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            context.addFailure(\r\n                this._owner,\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (let item of this.items) {\r\n            if (!isActionAllowed(item, this._owner.getForbiddenActionTypes())) {\r\n                context.addFailure(\r\n                    this._owner,\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + item.getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n            item.internalValidateProperties(context);\r\n        }\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().getEffectiveStyle();\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render(this._owner.hostConfig.actions.actionAlignment);\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (!action) {\r\n            throw new Error(\"The action parameter cannot be null.\");\r\n        }\r\n\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result: Array<Shared.IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        this._actionCollection.validateProperties(context);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValue(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport abstract class StylableCardElementContainer extends CardElementContainer {\r\n    private _style?: string = null;\r\n    private _bleed: boolean = false;\r\n\r\n    protected applyBackground() {\r\n        let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n        if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n            this.renderedElement.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n        }\r\n    }\r\n\r\n    protected applyPadding() {\r\n        super.applyPadding();\r\n\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        let physicalPadding = new Shared.SpacingDefinition();\r\n\r\n        if (this.getEffectivePadding()) {\r\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\r\n        }\r\n\r\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n        if (this.isBleeding()) {\r\n            // Bleed into the first parent that does have padding\r\n            let padding = new Shared.PaddingDefinition();\r\n\r\n            this.getImmediateSurroundingPadding(padding);\r\n\r\n            let surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\r\n\r\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n\r\n            if (!this.isDesignMode()) {\r\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\r\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\r\n            }\r\n\r\n            if (this.separatorElement && this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\r\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            this.renderedElement.style.marginRight = \"0\";\r\n            this.renderedElement.style.marginLeft = \"0\";\r\n            this.renderedElement.style.marginTop = \"0\";\r\n            this.renderedElement.style.marginBottom = \"0\";\r\n\r\n            if (this.separatorElement) {\r\n                this.separatorElement.style.marginRight = \"0\";\r\n                this.separatorElement.style.marginLeft = \"0\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        let currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            let currentElementHasBackgroundImage = currentElement instanceof Container ? currentElement.backgroundImage.isValid() : false;\r\n\r\n            if (currentElement instanceof StylableCardElementContainer) {\r\n                if (this.hasExplicitStyle && (currentElement.getEffectiveStyle() != this.getEffectiveStyle() || currentElementHasBackgroundImage)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return this.getHasBackground() ?\r\n            new Shared.PaddingDefinition(\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding,\r\n                Enums.Spacing.Padding) : super.getDefaultPadding();\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected getBleed(): boolean {\r\n        return this._bleed;\r\n    }\r\n\r\n    protected setBleed(value: boolean) {\r\n        this._bleed = value;\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    protected get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get supportsMinHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n\t\treturn (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"style\", this.style);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._style) {\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                context.addFailure(\r\n                    this,\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._style = Utils.getStringValue(json[\"style\"]);\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        let renderedElement = super.render();\r\n\r\n        if (renderedElement && this.getHasBackground()) {\r\n            this.applyBackground();\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    getEffectiveStyle(): string {\r\n        let effectiveStyle = this.style;\r\n\r\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage extends SerializableObject {\r\n    private static readonly defaultFillMode = Enums.FillMode.Cover;\r\n    private static readonly defaultHorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    private static readonly defaultVerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    url: string;\r\n    fillMode: Enums.FillMode = BackgroundImage.defaultFillMode;\r\n    horizontalAlignment: Enums.HorizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n    verticalAlignment: Enums.VerticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n\r\n    reset() {\r\n        this.url = undefined;\r\n        this.fillMode = BackgroundImage.defaultFillMode;\r\n        this.horizontalAlignment = BackgroundImage.defaultHorizontalAlignment;\r\n        this.verticalAlignment = BackgroundImage.defaultVerticalAlignment;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = Utils.getStringValue(json[\"url\"]);\r\n        this.fillMode = Utils.getEnumValue(Enums.FillMode, json[\"fillMode\"], this.fillMode);\r\n        this.horizontalAlignment = Utils.getEnumValue(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    toJSON(): any {\r\n        if (!this.isValid()) {\r\n            return null;\r\n        }\r\n\r\n        if (this.fillMode == BackgroundImage.defaultFillMode &&\r\n            this.horizontalAlignment == BackgroundImage.defaultHorizontalAlignment &&\r\n            this.verticalAlignment == BackgroundImage.defaultVerticalAlignment) {\r\n\r\n            return this.url;\r\n        }\r\n        else {\r\n            let result = super.toJSON();\r\n\r\n            Utils.setProperty(result, \"url\", this.url);\r\n            Utils.setEnumProperty(Enums.FillMode, result, \"fillMode\", this.fillMode, BackgroundImage.defaultFillMode);\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment, BackgroundImage.defaultHorizontalAlignment);\r\n            Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalAlignment\", this.verticalAlignment, BackgroundImage.defaultVerticalAlignment);\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.fillMode) {\r\n                case Enums.FillMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.FillMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.FillMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.FillMode.Cover:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    isValid(): boolean {\r\n        return !Utils.isNullOrEmpty(this.url);\r\n    }\r\n}\r\n\r\nexport class Container extends StylableCardElementContainer {\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n\r\n    private insertItemAt(\r\n        item: CardElement,\r\n        index: number,\r\n        forceInsert: boolean) {\r\n        if (!item.parent || forceInsert) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    protected supportsExcplitiHeight(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected applyBackground() {\r\n        if (this.backgroundImage.isValid()) {\r\n            this.backgroundImage.apply(this.renderedElement);\r\n        }\r\n\r\n        super.applyBackground();\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n\r\n        if (this.rtl != null && this.rtl) {\r\n            element.dir = \"rtl\";\r\n        }\r\n\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return this.backgroundImage.isValid() || super.getHasBackground();\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    readonly backgroundImage: BackgroundImage = new BackgroundImage();\r\n\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n    rtl?: boolean = null;\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.toJSON());\r\n\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let item of this._renderedItems) {\r\n                if (item.isVisible) {\r\n                    return item;\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\r\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\r\n                if (this._renderedItems[i].isVisible) {\r\n                    return this._renderedItems[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        let designMode = this.isDesignMode();\r\n\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible || designMode) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isRtl(): boolean {\r\n        if (this.rtl != null) {\r\n            return this.rtl;\r\n        }\r\n        else {\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.isRtl() : false;\r\n        }\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        let firstRenderedItem = this.getFirstVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false);\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        let lastRenderedItem = this.getLastVisibleRenderedItem();\r\n\r\n        return this.isBleeding() || (lastRenderedItem ? lastRenderedItem.isBleedingAtBottom() && lastRenderedItem.getEffectiveStyle() == this.getEffectiveStyle() : false);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.setShouldFallback(false);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        this.backgroundImage.reset();\r\n\r\n        let jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.fillMode = Enums.FillMode.Cover;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage.parse(jsonBackgroundImage, errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValue(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            let items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                let element = createElementInstance(\r\n                    this,\r\n                    items[i],\r\n                    !this.isDesignMode(),\r\n                    errors);\r\n\r\n                if (element) {\r\n                    this.insertItemAt(element, -1, true);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1, false);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        let result = super.getResourceInformation();\r\n\r\n        if (this.backgroundImage.isValid()) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Shared.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        const minDesignTimeColumnHeight = 20;\r\n\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = (!this.minPixelHeight ? minDesignTimeColumnHeight : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n\r\n            if (this.minPixelHeight) {\r\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\r\n            }\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <Shared.SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 auto\";\r\n                renderedElement.style.width = sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof Shared.SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        if (jsonWidth) {\r\n            var invalidWidth = false;\r\n\r\n            try {\r\n                this.width = Shared.SizeAndUnit.parse(jsonWidth);\r\n            }\r\n            catch (e) {\r\n                if (typeof jsonWidth === \"string\" && (jsonWidth === \"auto\" || jsonWidth === \"stretch\")) {\r\n                    this.width = jsonWidth;\r\n                }\r\n                else {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n\r\n            if (invalidWidth) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Invalid column width:\" + jsonWidth + \" - defaulting to \\\"auto\\\"\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends StylableCardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _renderedColumns: Array<Column>;\r\n\r\n    private createColumnInstance(json: any, errors: Array<HostConfig.IValidationError>): Column {\r\n        return createCardObjectInstance<Column>(\r\n            this,\r\n            json,\r\n            [], // Forbidden types not supported for elements for now\r\n            !this.isDesignMode(),\r\n            (typeName: string) => {\r\n                return !typeName || typeName === \"Column\" ? new Column() : null;\r\n            },\r\n            (typeName: string, errorType: InstanceCreationErrorType) => {\r\n                if (errorType == InstanceCreationErrorType.UnknownType) {\r\n                    return {\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + typeName + \". Fallback will be used if present.\"\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        error: Enums.ValidationError.ElementTypeNotAllowed,\r\n                        message: \"Element type \" + typeName + \" isn't allowed in a ColumnSet.\"\r\n                    }\r\n                }\r\n            },\r\n            errors);\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedColumns = [];\r\n\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            let totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Shared.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    let computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                let renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    this._renderedColumns.push(column);\r\n                }\r\n            }\r\n\r\n            return this._renderedColumns.length > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get isSelectable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        Utils.setProperty(result, \"bleed\", this.bleed, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtTop(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtTop()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this.isBleeding()) {\r\n            return true;\r\n        }\r\n\r\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\r\n            for (let column of this._columns) {\r\n                if (column.isBleedingAtBottom()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getFirstVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getLastVisibleRenderedItem(): CardElement {\r\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\r\n            return this._renderedColumns[this._renderedColumns.length - 1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                let column = this.createColumnInstance(jsonColumns[i], errors);\r\n\r\n                this._columns.push(column);\r\n            }\r\n        }\r\n\r\n        this.bleed = Utils.getBoolValue(json[\"bleed\"], this.bleed);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        let weightedColumns: number = 0;\r\n        let stretchedColumns: number = 0;\r\n\r\n        for (let column of this._columns) {\r\n            if (typeof column.width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (column.width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    isTopElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    isBottomElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) >= 0;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get bleed(): boolean {\r\n        return this.getBleed();\r\n    }\r\n\r\n    set bleed(value: boolean) {\r\n        this.setBleed(value);\r\n    }\r\n\r\n    get padding(): Shared.PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: Shared.PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this.getSelectAction();\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this.setSelectAction(value);\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        if (action.prepareForExecution()) {\r\n            onExecuteActionHandler(action);\r\n        }\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseInputValueChangedEvent(input: Input) {\r\n    let card = input.getRootElement() as AdaptiveCard;\r\n    let onInputValueChangedHandler = (card && card.onInputValueChanged) ? card.onInputValueChanged : AdaptiveCard.onInputValueChanged;\r\n\r\n    if (onInputValueChangedHandler) {\r\n        onInputValueChangedHandler(input);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<HostConfig.IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: HostConfig.IValidationError, errors: Array<HostConfig.IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    this.hostConfig,\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        if (this.renderIfEmpty) {\r\n            return element;\r\n        }\r\n        else {\r\n            return element.children.length > 0 ? element : null;\r\n        }\r\n    }\r\n\r\n    protected getHasExpandedAction(): boolean {\r\n        if (this.renderedActionCount == 0) {\r\n            return false;\r\n        }\r\n        else if (this.renderedActionCount == 1) {\r\n            return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n        }\r\n        else {\r\n            return this._actionCollection.expandedAction != null;\r\n        }\r\n    }\r\n\r\n    protected get renderedActionCount(): number {\r\n        return this._actionCollection.renderedActionCount;\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.parse(json[\"actions\"], errors);\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._actionCollection) {\r\n            this._actionCollection.validateProperties(context);\r\n        }\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        this._actionCollection.addAction(action);\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<Shared.IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    isBleedingAtBottom(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isBleedingAtBottom();\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"RichTextBlock\", () => { return new RichTextBlock(); });\r\n        this.registerType(\"TextRun\", () => { return new TextRun(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"ActionSet\", () => { return new ActionSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(OpenUrlAction.JsonTypeName, () => { return new OpenUrlAction(); });\r\n        this.registerType(SubmitAction.JsonTypeName, () => { return new SubmitAction(); });\r\n        this.registerType(ShowCardAction.JsonTypeName, () => { return new ShowCardAction(); });\r\n        this.registerType(ToggleVisibilityAction.JsonTypeName, () => { return new ToggleVisibilityAction(); });\r\n    }\r\n}\r\n\r\nexport interface IMarkdownProcessingResult {\r\n    didProcess: boolean;\r\n    outputHtml?: any;\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: HostConfig.Version = new HostConfig.Version(1, 2);\r\n\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n    static allowMarkForTextHighlighting: boolean = false;\r\n    static alwaysBleedSeparators: boolean = false;\r\n    static enableFullJsonRoundTrip: boolean = false;\r\n    static useBuiltInInputValidation: boolean = false;\r\n    static displayInputValidationErrors: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onInputValueChanged: (input: Input) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    static onParseError: (error: HostConfig.IValidationError) => void = null;\r\n    static onProcessMarkdown: (text: string, result: IMarkdownProcessingResult) => void = null;\r\n\r\n    static get processMarkdown(): (text: string) => string {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static set processMarkdown(value: (text: string) => string) {\r\n        throw new Error(\"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\")\r\n    }\r\n\r\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\r\n        let result: IMarkdownProcessingResult = {\r\n            didProcess: false\r\n        };\r\n\r\n        if (AdaptiveCard.onProcessMarkdown) {\r\n            AdaptiveCard.onProcessMarkdown(text, result);\r\n        }\r\n        else if (window[\"markdownit\"]) {\r\n            // Check for markdownit\r\n            result.outputHtml = window[\"markdownit\"]().render(text);\r\n            result.didProcess = true;\r\n        }\r\n        else {\r\n            console.warn(\"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\")\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n    private _fallbackCard: AdaptiveCard = null;\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            let unsupportedVersion: boolean =\r\n                !this.version ||\r\n                !this.version.isValid ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected getHasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get renderIfEmpty(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onInputValueChanged: (input: Input) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<HostConfig.IValidationError>) => void = null;\r\n\r\n    version?: HostConfig.Version = new HostConfig.Version(1, 0);\r\n    fallbackText: string;\r\n    speak: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON(): any {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    internalValidateProperties(context: ValidationResults) {\r\n        super.internalValidateProperties(context);\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && !this.version) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"The version property must be specified.\"\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            context.addFailure(\r\n                this,\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<HostConfig.IValidationError>) {\r\n        this._fallbackCard = null;\r\n\r\n        this._cardTypeName = Utils.getStringValue(json[\"type\"]);\r\n        this.speak = Utils.getStringValue(json[\"speak\"]);\r\n\r\n\t\tvar langId = Utils.getStringValue(json[\"lang\"]);\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = HostConfig.Version.parse(json[\"version\"], errors);\r\n\r\n        this.fallbackText = Utils.getStringValue(json[\"fallbackText\"]);\r\n\r\n        let fallbackElement = createElementInstance(\r\n            null,\r\n            json[\"fallback\"],\r\n            !this.isDesignMode(),\r\n            errors);\r\n\r\n        if (fallbackElement) {\r\n            this._fallbackCard = new AdaptiveCard();\r\n            this._fallbackCard.addItem(fallbackElement);\r\n        }\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        let renderedCard: HTMLElement;\r\n\r\n        if (this.shouldFallback() && this._fallbackCard) {\r\n            this._fallbackCard.hostConfig = this.hostConfig;\r\n\r\n            renderedCard = this._fallbackCard.render();\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    shouldFallback(): boolean {\r\n        return super.shouldFallback() || !this.isVersionSupported();\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected getDefaultPadding(): Shared.PaddingDefinition {\r\n        return new Shared.PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontTypes: {\r\n            default: {\r\n                fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            },\r\n            monospace: {\r\n                fontFamily: \"'Courier New', Courier, monospace\",\r\n                fontSizes: {\r\n                    small: 12,\r\n                    default: 14,\r\n                    medium: 17,\r\n                    large: 21,\r\n                    extraLarge: 26\r\n                },\r\n                fontWeights: {\r\n                    lighter: 200,\r\n                    default: 400,\r\n                    bolder: 600\r\n                }\r\n            }\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            accent: {\r\n                backgroundColor: \"#C7DEF9\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            good: {\r\n                backgroundColor: \"#CCFFCC\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            attention: {\r\n                backgroundColor: \"#FFC5B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            warning: {\r\n                backgroundColor: \"#FFE2B2\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nabstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n"],"sourceRoot":""}